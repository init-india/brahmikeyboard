name: Brahmi Keyboard CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate-structure:
    name: Validate Project Structure
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate Project Structure
      run: |
        echo "üîç Validating Brahmi Keyboard Structure..."
        
        # Check critical directories
        for dir in android-fdroid android-googleplay; do
          if [ -d "$dir" ]; then
            echo "‚úÖ $dir exists"
          else
            echo "‚ùå $dir missing!"
            exit 1
          fi
        done
        
        # Check critical files
        critical_files=(
          "android-fdroid/app/src/main/AndroidManifest.xml"
          "android-fdroid/app/src/main/res/xml/method.xml"
          "android-fdroid/app/build.gradle.kts"
        )
        
        for file in "${critical_files[@]}"; do
          if [ -f "$file" ]; then
            echo "‚úÖ $file exists"
          else
            echo "‚ùå $file missing!"
            exit 1
          fi
        done
        
        echo "üìÅ Project Structure:"
        find . -name "*.kt" -o -name "*.xml" -o -name "*.gradle.kts" | head -20

  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: validate-structure
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Build F-Droid Debug APK
      run: |
        cd android-fdroid
        ./gradlew assembleDebug --no-daemon --stacktrace
        
    - name: Build Google Play Debug APK
      run: |
        cd android-googleplay
        ./gradlew assembleDebug --no-daemon --stacktrace
        
    - name: Verify APK Generation
      run: |
        echo "üì¶ Generated APKs:"
        find . -name "*.apk" -type f | while read apk; do
          echo "‚úÖ $apk"
          ls -lh "$apk"
        done
        
        apk_count=$(find . -name "*.apk" -type f | wc -l)
        echo "Total APKs generated: $apk_count"
        
        if [ "$apk_count" -eq 0 ]; then
          echo "‚ùå No APKs generated!"
          exit 1
        fi

    - name: Upload APK Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: brahmi-keyboard-apks
        path: |
          android-fdroid/app/build/outputs/apk/
          android-googleplay/app/build/outputs/apk/
        retention-days: 7

  apk-validation:
    name: Validate APK Contents
    runs-on: ubuntu-latest
    needs: build-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download APK Artifacts
      uses: actions/download-artifact@v4
      with:
        name: brahmi-keyboard-apks
        path: downloaded-apks
        
    - name: Install Android tools
      run: |
        sudo apt-get update
        sudo apt-get install -y aapt
        
    - name: Validate APK Contents
      run: |
        echo "üîç Validating APK contents..."
        
        for apk in $(find downloaded-apks -name "*.apk"); do
          echo "üì± Validating: $(basename $apk)"
          
          # Check if APK contains IME service
          if aapt dump badging "$apk" | grep -q "InputMethod"; then
            echo "‚úÖ IME service found in $(basename $apk)"
          else
            echo "‚ùå No IME service in $(basename $apk)"
          fi
          
          # Check package name
          package=$(aapt dump badging "$apk" | grep "package: name=" | sed "s/.*name='\([^']*\)'.*/\1/")
          echo "üì¶ Package: $package"
          
          # Check permissions
          if aapt dump permissions "$apk" | grep -q "BIND_INPUT_METHOD"; then
            echo "‚úÖ BIND_INPUT_METHOD permission found"
          else
            echo "‚ùå Missing BIND_INPUT_METHOD permission"
          fi
          
          echo "---"
        done

  manual-test-checklist:
    name: Manual Test Checklist
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Display Manual Test Checklist
      run: |
        echo "## üß™ Manual Test Checklist"
        echo ""
        echo "After successful build, manually test:"
        echo ""
        echo "### Installation"
        echo "- [ ] Install APK on test device"
        echo "- [ ] App appears in app drawer"
        echo "- [ ] Settings activity opens"
        echo ""
        echo "### Keyboard Activation"
        echo "- [ ] Keyboard appears in Settings ‚Üí Language & Input"
        echo "- [ ] Can enable Brahmi keyboard"
        echo "- [ ] Can switch to Brahmi keyboard in any app"
        echo ""
        echo "### Functionality"
        echo "- [ ] Keyboard layout displays correctly"
        echo "- [ ] Keys produce output"
        echo "- [ ] Mode switching works (English/Brahmi)"
        echo "- [ ] Preview bar updates correctly"
        echo ""
        echo "### Testing Commands"
        echo '```bash'
        echo "# Install and test"
        echo "adb install android-fdroid/app/build/outputs/apk/fdroid/debug/app-fdroid-debug.apk"
        echo "adb shell ime list -a | grep brahmi"
        echo "adb shell ime set com.brahmikeyboard.foss/.ime.BrahmiInputMethodService"
        echo '```'
